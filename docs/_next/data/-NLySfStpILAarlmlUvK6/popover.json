{"pageProps":{"json":{"returns":["- triggerRef - ref of the element that will toggle the popover content visibility","- panelRef - ref of the content wrapper"],"description":["A Popover can be used to display some content on top of another.","Its an alternative to react-popper."],"defaultValue":["- position - 'bottom-center","- gap - 0","- active - false"],"propList":[{"name":"active","description":"Toggle state of the content visiblity","defaultValue":false,"required":false,"type":{"name":"boolean"}},{"name":"position","description":"Position content around the trigger","defaultValue":"bottom-center","required":false,"type":{"name":"PositionTypes"}},{"name":"gap","description":"Add space between the trigger and the popover","defaultValue":0,"required":false,"type":{"name":"number"}},{"name":"onStateChanged","description":"Fires whenever the content visibility is toggled\n@param active - boolean - state of the content\n@returns","required":false,"type":{"name":"(active: boolean) => void"}}],"basicExample":["export const Basic = ({ position, gap }: PopoverProps) => {"," const { triggerRef, panelRef } = usePopover({","   position: position,","   gap: gap,"," });"," return (","   <div>","     <button className=\"popover-trigger\" ref={triggerRef}>","       Show Popver","     </button>","     {ReactDOM.createPortal(","       <div className=\"popover-example-root\" ref={panelRef}>","         <ul className=\"popover-example\">","           <li tabIndex={0}>Three</li>","           <li tabIndex={0}>Two</li>","           <li tabIndex={0}>One</li>","         </ul>","       </div>,","       document.body","     )}"," </div>"," );"," };"]},"name":"popover","links":[{"title":"Accordion","href":"/accordion"},{"title":"Drawer","href":"/drawer"},{"title":"Overlay","href":"/overlay"},{"title":"Popover","href":"/popover"},{"title":"Sidepanel","href":"/sidepanel"},{"title":"Trigger","href":"/trigger"}]},"__N_SSG":true}