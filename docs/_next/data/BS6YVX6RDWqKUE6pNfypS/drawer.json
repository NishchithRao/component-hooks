{"pageProps":{"json":{"returns":["- triggerRef - ref of the element that will toggle the expansion","- panelRef - ref of the content wrapper"],"description":["Use this helper hook to expand elements vertically or horizontally. Useful to create","sidepanels and accordions"],"defaultValue":[],"propList":[{"name":"orientation","description":"Toggle how the content should appear. Vertical resembles an Accordion and Horizontal\nresembles a Sidepanel","required":true,"type":{"name":"\"vertical\" | \"horizontal\""}},{"name":"activeClassName","description":"Classname to be applied when an accordion is open","required":false,"type":{"name":"string"}},{"name":"active","description":"Programatically control the accordion. Determines whether an accordion is open or closed.","required":false,"type":{"name":"boolean"}},{"name":"onStateChange","description":"Callback fired when an accordion is open/closed.\n@param state - The state of the accordion","required":false,"type":{"name":"(state: boolean) => void"}}],"basicExample":["export const Example = () => {","","const { triggerRef, panelRef } = useDrawer({","orientation: 'vertical',","});","return ("," <div className='accordion-root'>","   <button ref={triggerRef} className='drawer-trigger'>","     <span className='accordion-header-tiltle'>Sample Accordion</span>","   </button>","   <div ref={panelRef} className='drawer-panel'>","       Lorem ipsum dolor sit amet, consectetur adipiscing elit.","   </div>"," </div>",");","};"]},"name":"drawer","links":[{"title":"Accordion","href":"/accordion"},{"title":"Drawer","href":"/drawer"},{"title":"Overlay","href":"/overlay"},{"title":"Popover","href":"/popover"},{"title":"Sidepanel","href":"/sidepanel"},{"title":"Trigger","href":"/trigger"}]},"__N_SSG":true}